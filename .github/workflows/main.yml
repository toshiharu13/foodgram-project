name: Django-app workflow for foodgram-project

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        # обновление pip
        python -m pip install --upgrade pip
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r requirements.txt
    - name: Test with flake8
      run: |
        # запуск проверки проекта по flake8
        python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 # Проверяет доступность репозитория DockerHub для workflow
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # Вызывает сборщик контейнеров docker
      - name: Login to Docker
        uses: docker/login-action@v1 # Запуск скрипта авторизации на DockerHub
        with:
          username: ${{ secrets.KEY_FOR_DOCKER }}
          password: ${{ secrets.PASS_FOR_DOCKER }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 # Выполняет push образа в DockerHub
        with:
          push: true
          tags: ${{ secrets.KEY_FOR_DOCKER }}/web_for_diplom:final

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VIRT_HOST }}
          username: ${{ secrets.USER_TO_VIRT_HOST }}
          key: ${{ secrets.SSH_KEY_TO_VIRT_HOST }}
          passphrase: ${{ secrets.PASSPHRASE_FOR_SSH }}
          # stack_file_name: docker-compose.yaml
          script: |
            sudo docker pull ${{ secrets.KEY_FOR_DOCKER }}/web_for_diplom
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T web python manage.py makemigrations prod_h
            sudo docker-compose exec -T web python manage.py migrate
            sudo docker-compose exec -T web python manage.py loaddata --exclude=auth --exclude=contenttypes db.json
            sudo docker-compose exec -T web python manage.py collectstatic --no-input
